---
- name: restrict home access
  file:
    path: "{{ ansible_user_dir }}"
    mode: 'o-rwx'

- name: generate ssh key
  user:
    name: "{{ ansible_user_id }}"
    generate_ssh_key: yes
    ssh_key_type: ed25519
    ssh_key_comment: "{{ ansible_user_id }}-default@{{ ansible_hostname }}"

- name: create ~/Downloads/os_images/ directory
  file:
    path: ~/Downloads/os_images
    state: directory

- name: make sure ~/.local/bin/ exists
  file:
    path: ~/.local/bin
    state: directory

- name: make sure wallpaper dir exists
  file:
    path: ~/.local/share/backgrounds
    state: directory

- name: download plain wallpaper
  get_url:
    url: "{{ wallpaper_url }}"
    dest: ~/.local/share/backgrounds/blank.png
  register: wallpaper

- name: set the list of extensions
  set_fact:
    extensions:
      - id: system-monitor-next@paradoxxx.zero.gmail.com
        file: system-monitor-nextparadoxxx.zero.gmail.com.v75.shell-extension.zip
      - id: Bluetooth-Battery-Meter@maniacx.github.com
        file: Bluetooth-Battery-Metermaniacx.github.com.v26.shell-extension.zip

- name: download extension
  get_url:
    url: https://extensions.gnome.org/extension-data/{{ item.file }}
    dest: ~/Downloads/{{ item.file }}
  register: extension
  with_items: "{{ extensions }}"

- name: make sure extension dir exists
  file:
    path: ~/.local/share/gnome-shell/extensions/{{ item.id}}
    state: directory
  with_items: "{{ extensions }}"
  when: extension is changed

- name: extract extension
  unarchive:
    src: ~/Downloads/{{ item.file }}
    dest: ~/.local/share/gnome-shell/extensions/{{ item.id }}
    remote_src: yes
  with_items: "{{ extensions }}"
  when: extension is changed

- name: create ssh controlmasters directory
  file:
    path: ~/.ssh/sockets/
    state: directory
    mode: 0700

- name: make XDG directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - ~/Documents/Music
    - ~/Documents/Pictures
    - ~/Documents/Videos
  register: xdg_dir

- name: clean up old XDG directories
  command: rmdir "{{ item }}"
  with_items:
    - ~/Music
    - ~/Pictures
    - ~/Videos
  when: xdg_dir is changed

- name: clean up example link
  file:
    path: ~/examples.desktop
    state: absent
  when: xdg_dir is changed

- name: clear gtk bookmarks
  file:
    path: ~/.config/gtk-3.0/bookmarks
    state: absent
  when: xdg_dir is changed

- name: copy dotfiles
  copy:
    src: files/dotfiles/
    dest: ~/
  register: dotfiles

- name: make .lessfilter and ~/.local/* executable
  file:
    path: "{{ item }}"
    mode: 0755
  with_items:
  - ~/.lessfilter
  - ~/.local/bin/bquote
  - ~/.local/bin/juju-current-model
  - ~/.local/bin/otp-ubuntu
  - ~/.local/bin/toggle-audio-loopback
  - ~/.local/bin/toggle-mute-unmute
  - ~/.local/bin/xclips-browser
  - ~/.local/lib/notify-send-wireless-packet-loss

- name: enable notify-send-wireless-packet-loss service
  systemd:
    scope: user
    name: notify-send-wireless-packet-loss
    enabled: true

- name: generate ICC profile
  command: |
    cd-create-profile \
      --output ~/.local/share/icc/{{ item }}.icc \
      ~/.local/share/icc/{{ item }}.xml
  when: dotfiles is changed
  with_items:
    - D63
    - D64
    - D65_0.8G
    - D65_0.85G
    - D65_0.9G
    - D65_0.95G
    - D65_1.05G
    - D65_1.1G
    - D65_1.15G
    - D65_1.2G
    - D66
    - D67

- name: bashrc
  blockinfile:
    dest: ~/.bashrc
    block: "{{ lookup('file', 'files/bashrc_block') }}"

- name: profile
  blockinfile:
    dest: ~/.profile
    block: "{{ lookup('file', 'files/profile_block') }}"

- name: install viddy
  community.general.cargo:
    name: viddy
    locked: true

- name: git config
  command: git config --global "{{ item.key }}" "{{ item.value }}"
  with_dict:
    - { pull.ff: only }
    - { core.pager: "delta" }
    - { core.autocrlf: input }
    - { log.follow: "true" }
    - { merge.conflictStyle: zdiff3 }
    - { merge.tool: meld }
    - { mergetool.keepBackup: "false" }
    - { checkout.defaultRemote: origin }
    - { rebase.autoSquash: "true" }
    - { "url.https://opendev.org/.insteadOf": "opendev:" }
    - { delta.color-only: "true" }
    - { delta.diff-highlight: "true" }
    - { delta.max-line-length: "4096" }
  changed_when: False

- name: get X-axis resolusion of eDP
  set_fact:
      x_axis_resolution: "{{ lookup('file', '/sys/class/drm/card1/card1-eDP-1/modes', errors='warn') | regex_search('^[0-9]+') }}"

- name: calculate relative scaling factor to full-HD displays
  set_fact:
    scaling_factor: "{{ (x_axis_resolution|int / 1920) | round(2) }}"
  when: x_axis_resolution

- name: render firefox user.js
  template:
    src: templates/firefox_user.js.j2
    dest: ~/snap/firefox/common/.mozilla/firefox/default/user.js

- name: render .chromium-browser.init
  template:
    src: templates/chromium-browser.init.j2
    dest: ~/.chromium-browser.init
  when: scaling_factor

- name: render dconf
  template:
    src: templates/dconf.ini.j2
    dest: ~/.config/dconf/user.ini
  register: dconf

- name: reset dconf
  command: dconf reset -f /
  when: dconf is changed

- name: pause to prevent dconf race conditions
  pause:
    seconds: 5
  when: dconf is changed

- name: import dconf
  shell: dconf load / < ~/.config/dconf/user.ini
  when: dconf is changed

- name: 'workaround for LP: #1422290 - UNZIP'
  lineinfile:
    dest: ~/.profile
    regexp: "^export {{ item }}="
    line: "export {{ item }}='-O CP932'"
    state: present
  with_items:
    - UNZIP
    - ZIPINFO
  # LP: #2066389
  when: ansible_facts['distribution_version'] is version('24.10', '<')

- name: check if Dropbox is running
  command: dropbox running
  register: dropbox
  changed_when: False
  ignore_errors: True

- name: Dropbox start
  command: dropbox start -i
  environment:
    DISPLAY: ''
  when: dropbox is success

- name: check vscode plugins
  find:
    paths: ~/.vscode/extensions/
    recurse: no
    file_type: directory
    patterns: 'ms-python.python-*'
  register: vscode_plugin

- name: vscode plugins
  command: code --install-extension {{ item }}
  loop:
    - ms-python.python
    - ms-python.black-formatter
    - ms-python.flake8
    - GitHub.vscode-github-actions
    - redhat.vscode-yaml
    - samuelcolvin.jinjahtml
    - golang.Go
    - ms-vscode.cpptools
    - tuttieee.emacs-mcx
    - streetsidesoftware.code-spell-checker
    - eamodio.gitlens
    - stkb.rewrap
    - njpwerner.autodocstring
    - pomdtr.excalidraw-editor
    - usernamehw.errorlens
  loop_control:
    pause: 5
  changed_when: False
  when: vscode_plugin.matched == 0

- name: download docsets for Zeal
  get_url:
    url: "https://tokyo.kapeli.com/feeds/{{ item }}.tgz"
    dest: ~/Downloads/{{ item }}.tgz
  register: docsets
  with_items:
    - Ansible
    - Jinja
    - Python_3

- name: create docsets dir
  file:
    path: ~/.local/share/Zeal/Zeal/docsets/
    state: directory

- name: extract docsets
  unarchive:
    src: ~/Downloads/{{ item }}.tgz
    dest: ~/.local/share/Zeal/Zeal/docsets/
    remote_src: yes
  with_items:
    - Ansible
    - Jinja
    - Python_3
  when: docsets is changed

- name: create src directory
  file:
    path: ~/src
    state: directory

- name: create a directory for private repos
  file:
    path: ~/src/corporate_private
    state: directory

- name: create a directory for openstack repos
  file:
    path: ~/src/openstack
    state: directory

- name: make sure git destination exists
  file:
    path: ~/src/{{ item.type }}
    state: directory
  with_items: "{{ git_repos }}"

- name: clone git repos
  git:
    repo: "{{ item.repo }}"
    dest: "~/src/{{ item.type }}/{{ item.name }}"
    update: false
  with_items: "{{ git_repos }}"
